//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Navferty.ExcelAddIn.Web.CurrencyExchangeRates
{


	/// <summary>
	///Represents a strongly typed in-memory cache of data.
	///</summary>
	[global::System.Serializable()]
	[global::System.ComponentModel.DesignerCategoryAttribute("code")]
	[global::System.ComponentModel.ToolboxItem(true)]
	[global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
	[global::System.Xml.Serialization.XmlRootAttribute("CurrencyExchangeRatesDataset")]
	[global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
	internal partial class CurrencyExchangeRatesDataset : global::System.Data.DataSet
	{

		private ExchangeRatesDataTable tableExchangeRates;

		private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		public CurrencyExchangeRatesDataset()
		{
			this.BeginInit();
			this.InitClass();
			global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
			base.Tables.CollectionChanged += schemaChangedHandler;
			base.Relations.CollectionChanged += schemaChangedHandler;
			this.EndInit();
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		protected CurrencyExchangeRatesDataset(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
				base(info, context, false)
		{
			if ((this.IsBinarySerialized(info, context) == true))
			{
				this.InitVars(false);
				global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
				this.Tables.CollectionChanged += schemaChangedHandler1;
				this.Relations.CollectionChanged += schemaChangedHandler1;
				return;
			}
			string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
			if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema))
			{
				global::System.Data.DataSet ds = new global::System.Data.DataSet();
				ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
				if ((ds.Tables["ExchangeRates"] != null))
				{
					base.Tables.Add(new ExchangeRatesDataTable(ds.Tables["ExchangeRates"]));
				}
				this.DataSetName = ds.DataSetName;
				this.Prefix = ds.Prefix;
				this.Namespace = ds.Namespace;
				this.Locale = ds.Locale;
				this.CaseSensitive = ds.CaseSensitive;
				this.EnforceConstraints = ds.EnforceConstraints;
				this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
				this.InitVars();
			}
			else
			{
				this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
			}
			this.GetSerializationData(info, context);
			global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
			base.Tables.CollectionChanged += schemaChangedHandler;
			this.Relations.CollectionChanged += schemaChangedHandler;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		[global::System.ComponentModel.Browsable(false)]
		[global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
		public ExchangeRatesDataTable ExchangeRates
		{
			get
			{
				return this.tableExchangeRates;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		[global::System.ComponentModel.BrowsableAttribute(true)]
		[global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
		public override global::System.Data.SchemaSerializationMode SchemaSerializationMode
		{
			get
			{
				return this._schemaSerializationMode;
			}
			set
			{
				this._schemaSerializationMode = value;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		[global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
		public new global::System.Data.DataTableCollection Tables
		{
			get
			{
				return base.Tables;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		[global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
		public new global::System.Data.DataRelationCollection Relations
		{
			get
			{
				return base.Relations;
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		protected override void InitializeDerivedDataSet()
		{
			this.BeginInit();
			this.InitClass();
			this.EndInit();
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		public override global::System.Data.DataSet Clone()
		{
			CurrencyExchangeRatesDataset cln = ((CurrencyExchangeRatesDataset)(base.Clone()));
			cln.InitVars();
			cln.SchemaSerializationMode = this.SchemaSerializationMode;
			return cln;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		protected override bool ShouldSerializeTables()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		protected override bool ShouldSerializeRelations()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader)
		{
			if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema))
			{
				this.Reset();
				global::System.Data.DataSet ds = new global::System.Data.DataSet();
				ds.ReadXml(reader);
				if ((ds.Tables["ExchangeRates"] != null))
				{
					base.Tables.Add(new ExchangeRatesDataTable(ds.Tables["ExchangeRates"]));
				}
				this.DataSetName = ds.DataSetName;
				this.Prefix = ds.Prefix;
				this.Namespace = ds.Namespace;
				this.Locale = ds.Locale;
				this.CaseSensitive = ds.CaseSensitive;
				this.EnforceConstraints = ds.EnforceConstraints;
				this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
				this.InitVars();
			}
			else
			{
				this.ReadXml(reader);
				this.InitVars();
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable()
		{
			global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
			this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
			stream.Position = 0;
			return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		internal void InitVars()
		{
			this.InitVars(true);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		internal void InitVars(bool initTable)
		{
			this.tableExchangeRates = ((ExchangeRatesDataTable)(base.Tables["ExchangeRates"]));
			if ((initTable == true))
			{
				if ((this.tableExchangeRates != null))
				{
					this.tableExchangeRates.InitVars();
				}
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		private void InitClass()
		{
			this.DataSetName = "CurrencyExchangeRatesDataset";
			this.Prefix = "";
			this.Namespace = "http://tempuri.org/DataSet1.xsd";
			this.EnforceConstraints = true;
			this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
			this.tableExchangeRates = new ExchangeRatesDataTable();
			base.Tables.Add(this.tableExchangeRates);
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		private bool ShouldSerializeExchangeRates()
		{
			return false;
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e)
		{
			if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove))
			{
				this.InitVars();
			}
		}

		[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs)
		{
			CurrencyExchangeRatesDataset ds = new CurrencyExchangeRatesDataset();
			global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
			global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
			global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
			any.Namespace = ds.Namespace;
			sequence.Items.Add(any);
			type.Particle = sequence;
			global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
			if (xs.Contains(dsSchema.TargetNamespace))
			{
				global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
				global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
				try
				{
					global::System.Xml.Schema.XmlSchema schema = null;
					dsSchema.Write(s1);
					for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
					{
						schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
						s2.SetLength(0);
						schema.Write(s2);
						if ((s1.Length == s2.Length))
						{
							s1.Position = 0;
							s2.Position = 0;
							for (; ((s1.Position != s1.Length)
										&& (s1.ReadByte() == s2.ReadByte()));)
							{
								;
							}
							if ((s1.Position == s1.Length))
							{
								return type;
							}
						}
					}
				}
				finally
				{
					if ((s1 != null))
					{
						s1.Close();
					}
					if ((s2 != null))
					{
						s2.Close();
					}
				}
			}
			xs.Add(dsSchema);
			return type;
		}

		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		public delegate void ExchangeRatesRowChangeEventHandler(object sender, ExchangeRatesRowChangeEvent e);

		/// <summary>
		///Represents the strongly named DataTable class.
		///</summary>
		[global::System.Serializable()]
		[global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
		public partial class ExchangeRatesDataTable : global::System.Data.TypedTableBase<ExchangeRatesRow>
		{

			private global::System.Data.DataColumn columnID;

			private global::System.Data.DataColumn columnName;

			private global::System.Data.DataColumn columnISO;

			private global::System.Data.DataColumn columnRate;

			private global::System.Data.DataColumn columnRaw;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public ExchangeRatesDataTable()
			{
				this.TableName = "ExchangeRates";
				this.BeginInit();
				this.InitClass();
				this.EndInit();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			internal ExchangeRatesDataTable(global::System.Data.DataTable table)
			{
				this.TableName = table.TableName;
				if ((table.CaseSensitive != table.DataSet.CaseSensitive))
				{
					this.CaseSensitive = table.CaseSensitive;
				}
				if ((table.Locale.ToString() != table.DataSet.Locale.ToString()))
				{
					this.Locale = table.Locale;
				}
				if ((table.Namespace != table.DataSet.Namespace))
				{
					this.Namespace = table.Namespace;
				}
				this.Prefix = table.Prefix;
				this.MinimumCapacity = table.MinimumCapacity;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			protected ExchangeRatesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) :
					base(info, context)
			{
				this.InitVars();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public global::System.Data.DataColumn IDColumn
			{
				get
				{
					return this.columnID;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public global::System.Data.DataColumn NameColumn
			{
				get
				{
					return this.columnName;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public global::System.Data.DataColumn ISOColumn
			{
				get
				{
					return this.columnISO;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public global::System.Data.DataColumn RateColumn
			{
				get
				{
					return this.columnRate;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public global::System.Data.DataColumn ExchangeRateRecordColumn
			{
				get
				{
					return this.columnRaw;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			[global::System.ComponentModel.Browsable(false)]
			public int Count
			{
				get
				{
					return this.Rows.Count;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public ExchangeRatesRow this[int index]
			{
				get
				{
					return ((ExchangeRatesRow)(this.Rows[index]));
				}
			}

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public event ExchangeRatesRowChangeEventHandler ExchangeRatesRowChanging;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public event ExchangeRatesRowChangeEventHandler ExchangeRatesRowChanged;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public event ExchangeRatesRowChangeEventHandler ExchangeRatesRowDeleting;

			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public event ExchangeRatesRowChangeEventHandler ExchangeRatesRowDeleted;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public void AddExchangeRatesRow(ExchangeRatesRow row)
			{
				this.Rows.Add(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public ExchangeRatesRow AddExchangeRatesRow(string Name, string ISO, double Rate, object Raw)
			{
				ExchangeRatesRow rowExchangeRatesRow = ((ExchangeRatesRow)(this.NewRow()));
				object[] columnValuesArray = new object[] {
						null,
						Name,
						ISO,
						Rate,
						Raw};
				rowExchangeRatesRow.ItemArray = columnValuesArray;
				this.Rows.Add(rowExchangeRatesRow);
				return rowExchangeRatesRow;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public override global::System.Data.DataTable Clone()
			{
				ExchangeRatesDataTable cln = ((ExchangeRatesDataTable)(base.Clone()));
				cln.InitVars();
				return cln;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			protected override global::System.Data.DataTable CreateInstance()
			{
				return new ExchangeRatesDataTable();
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			internal void InitVars()
			{
				this.columnID = base.Columns["ID"];
				this.columnName = base.Columns["Name"];
				this.columnISO = base.Columns["ISO"];
				this.columnRate = base.Columns["Rate"];
				this.columnRaw = base.Columns["Raw"];
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			private void InitClass()
			{
				this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnID);
				this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnName);
				this.columnISO = new global::System.Data.DataColumn("ISO", typeof(string), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnISO);
				this.columnRate = new global::System.Data.DataColumn("Rate", typeof(double), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnRate);
				this.columnRaw = new global::System.Data.DataColumn("Raw", typeof(object), null, global::System.Data.MappingType.Element);
				base.Columns.Add(this.columnRaw);
				this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint11", new global::System.Data.DataColumn[] {
								this.columnID}, false));
				this.columnID.AutoIncrement = true;
				this.columnID.AllowDBNull = false;
				this.columnID.Unique = true;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public ExchangeRatesRow NewExchangeRatesRow()
			{
				return ((ExchangeRatesRow)(this.NewRow()));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder)
			{
				return new ExchangeRatesRow(builder);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			protected override global::System.Type GetRowType()
			{
				return typeof(ExchangeRatesRow);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanged(e);
				if ((this.ExchangeRatesRowChanged != null))
				{
					this.ExchangeRatesRowChanged(this, new ExchangeRatesRowChangeEvent(((ExchangeRatesRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowChanging(e);
				if ((this.ExchangeRatesRowChanging != null))
				{
					this.ExchangeRatesRowChanging(this, new ExchangeRatesRowChangeEvent(((ExchangeRatesRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleted(e);
				if ((this.ExchangeRatesRowDeleted != null))
				{
					this.ExchangeRatesRowDeleted(this, new ExchangeRatesRowChangeEvent(((ExchangeRatesRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e)
			{
				base.OnRowDeleting(e);
				if ((this.ExchangeRatesRowDeleting != null))
				{
					this.ExchangeRatesRowDeleting(this, new ExchangeRatesRowChangeEvent(((ExchangeRatesRow)(e.Row)), e.Action));
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public void RemoveExchangeRatesRow(ExchangeRatesRow row)
			{
				this.Rows.Remove(row);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs)
			{
				global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
				global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
				CurrencyExchangeRatesDataset ds = new CurrencyExchangeRatesDataset();
				global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
				any1.Namespace = "http://www.w3.org/2001/XMLSchema";
				any1.MinOccurs = new decimal(0);
				any1.MaxOccurs = decimal.MaxValue;
				any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any1);
				global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
				any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
				any2.MinOccurs = new decimal(1);
				any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
				sequence.Items.Add(any2);
				global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute1.Name = "namespace";
				attribute1.FixedValue = ds.Namespace;
				type.Attributes.Add(attribute1);
				global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
				attribute2.Name = "tableTypeName";
				attribute2.FixedValue = "ExchangeRatesDataTable";
				type.Attributes.Add(attribute2);
				type.Particle = sequence;
				global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
				if (xs.Contains(dsSchema.TargetNamespace))
				{
					global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
					global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
					try
					{
						global::System.Xml.Schema.XmlSchema schema = null;
						dsSchema.Write(s1);
						for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext();)
						{
							schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
							s2.SetLength(0);
							schema.Write(s2);
							if ((s1.Length == s2.Length))
							{
								s1.Position = 0;
								s2.Position = 0;
								for (; ((s1.Position != s1.Length)
											&& (s1.ReadByte() == s2.ReadByte()));)
								{
									;
								}
								if ((s1.Position == s1.Length))
								{
									return type;
								}
							}
						}
					}
					finally
					{
						if ((s1 != null))
						{
							s1.Close();
						}
						if ((s2 != null))
						{
							s2.Close();
						}
					}
				}
				xs.Add(dsSchema);
				return type;
			}
		}

		/// <summary>
		///Represents strongly named DataRow class.
		///</summary>
		public partial class ExchangeRatesRow : global::System.Data.DataRow
		{

			private ExchangeRatesDataTable tableExchangeRates;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			internal ExchangeRatesRow(global::System.Data.DataRowBuilder rb) :
					base(rb)
			{
				this.tableExchangeRates = ((ExchangeRatesDataTable)(this.Table));
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public int ID
			{
				get
				{
					return ((int)(this[this.tableExchangeRates.IDColumn]));
				}
				set
				{
					this[this.tableExchangeRates.IDColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public string Name
			{
				get
				{
					try
					{
						return ((string)(this[this.tableExchangeRates.NameColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'ExchangeRates\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableExchangeRates.NameColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public string ISO
			{
				get
				{
					try
					{
						return ((string)(this[this.tableExchangeRates.ISOColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'ISO\' in table \'ExchangeRates\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableExchangeRates.ISOColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public double Rate
			{
				get
				{
					try
					{
						return ((double)(this[this.tableExchangeRates.RateColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'ExchangeRates\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableExchangeRates.RateColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public ExchangeRateRecord Raw
			{
				get
				{
					try
					{
						return ((ExchangeRateRecord)(this[this.tableExchangeRates.ExchangeRateRecordColumn]));
					}
					catch (global::System.InvalidCastException e)
					{
						throw new global::System.Data.StrongTypingException("The value for column \'Raw\' in table \'ExchangeRates\' is DBNull.", e);
					}
				}
				set
				{
					this[this.tableExchangeRates.ExchangeRateRecordColumn] = value;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public bool IsNameNull()
			{
				return this.IsNull(this.tableExchangeRates.NameColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public void SetNameNull()
			{
				this[this.tableExchangeRates.NameColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public bool IsISONull()
			{
				return this.IsNull(this.tableExchangeRates.ISOColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public void SetISONull()
			{
				this[this.tableExchangeRates.ISOColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public bool IsRateNull()
			{
				return this.IsNull(this.tableExchangeRates.RateColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public void SetRateNull()
			{
				this[this.tableExchangeRates.RateColumn] = global::System.Convert.DBNull;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public bool IsRawNull()
			{
				return this.IsNull(this.tableExchangeRates.ExchangeRateRecordColumn);
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public void SetRawNull()
			{
				this[this.tableExchangeRates.ExchangeRateRecordColumn] = global::System.Convert.DBNull;
			}
		}

		/// <summary>
		///Row event argument class
		///</summary>
		[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
		public class ExchangeRatesRowChangeEvent : global::System.EventArgs
		{

			private ExchangeRatesRow eventRow;

			private global::System.Data.DataRowAction eventAction;

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public ExchangeRatesRowChangeEvent(ExchangeRatesRow row, global::System.Data.DataRowAction action)
			{
				this.eventRow = row;
				this.eventAction = action;
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public ExchangeRatesRow Row
			{
				get
				{
					return this.eventRow;
				}
			}

			[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
			[global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
			public global::System.Data.DataRowAction Action
			{
				get
				{
					return this.eventAction;
				}
			}
		}
	}
}

#pragma warning restore 1591
